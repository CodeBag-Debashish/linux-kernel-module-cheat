#!/usr/bin/env bash
set -e
arch=x86_64
extra_make_args=''
gem5=false
j="$(($(nproc) - 2))"
post_script_args=''
qemu_sdl='--enable-sdl --with-sdlabi=2.0'
x11=false
v=0
while getopts 'a:gj:lp:qSt:v' OPT; do
  case "$OPT" in
    a)
      arch="$OPTARG"
    ;;
    g)
      gem5=true
    ;;
    j)
      j="$OPTARG"
    ;;
    l)
      extra_make_args="$extra_make_args kernel_module-reconfigure"
    ;;
    l)
      extra_make_args="$extra_make_args linux-reconfigure"
    ;;
    p)
      post_script_args="$OPTARG"
    ;;
    q)
      extra_make_args="$extra_make_args host-qemu-reconfigure"
    ;;
    S)
      qemu_sdl=''
    ;;
    x)
      x11=true
    ;;
    v)
      v=1
    ;;
  esac
done
shift $(($OPTIND - 1))
extra_make_args="$extra_make_args $@"
case "$arch" in
  x86_64)
    defconfig=qemu_x86_64_defconfig
  ;;
  arm)
    defconfig=qemu_arm_versatile_defconfig
  ;;
  aarch64)
    defconfig=qemu_aarch64_virt_defconfig
  ;;
  mips64)
    defconfig=qemu_mips64r6_malta_defconfig
  ;;
esac
arch_dir="$arch"
if "$gem5"; then
  arch_dir="${arch}-gem5"
  # Networking was not working, so disable it to speed things up.
  post_script_args="$post_script_args -n"
fi

rootdir="$(pwd)"
cd kernel_module
./make-host.sh -j "$j" clean
cd "$rootdir/buildroot"
for p in $(find "${rootdir}/buildroot_patches/" -maxdepth 1 -name '*.patch' -print); do
    patch -N -r - -p 1 <"$p" || :
done
outdir="output.${arch_dir}~"
make O="$outdir" BR2_EXTERNAL="${rootdir}/kernel_module:${rootdir}/gem5:${rootdir}/parsec-benchmark" "$defconfig"
# TODO Can't get rid of this for now.
# http://stackoverflow.com/questions/44078245/is-it-possible-to-use-config-fragments-with-buildroots-config
cat ../buildroot_config_fragment >> "${outdir}/.config"
if "$gem5"; then
  echo "\
BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE=\"../kernel_config_${arch_dir}\"
" >> "${outdir}/.config"
else
  echo "\
BR2_LINUX_KERNEL_CONFIG_FRAGMENT_FILES=\"../kernel_config_fragment\"
" >> "${outdir}/.config"
fi
if "$x11"; then
  cat ../buildroot_config_fragment_x11 >> "${outdir}/.config"
fi
if ! "$gem5"; then
  cat ../buildroot_config_fragment_qemu >> "${outdir}/.config"
fi
if [ "$arch" = 'mips64' ]; then
  # Workaround for:
  # http://lists.busybox.net/pipermail/buildroot/2017-August/201053.html
  sed -Ei 's/^BR2_PACKAGE_LINUX_TOOLS_GPIO/BR2_PACKAGE_LINUX_TOOLS_GPIO=n/' "${outdir}/.config"
fi
make O="$outdir" olddefconfig
# HOST_QEMU_OPTS is a hack that happens to work because the QEMU package luckly uses += at all times.
# It shouldn't be necessary in the first place: https://bugs.busybox.net/show_bug.cgi?id=9936
#
# Even if were an autotools package, there is no general way currently to pass extra configs to it:
# https://stackoverflow.com/questions/44341188/how-to-pass-extra-custom-configure-autotools-options-to-a-buildroot-package/44341225#44341225
cmd="time \
  env \
  -u LD_LIBRARY_PATH \
  make \
  O='$outdir' \
  BR2_JLEVEL='$j' \
  BR2_PACKAGE_GEM5='$("$gem5" && echo y || echo n)' \
  BR2_ROOTFS_POST_SCRIPT_ARGS='$post_script_args' \
  HOST_QEMU_OPTS='--enable-debug --extra-cflags=-DDEBUG_PL061=1 --enable-trace-backends=simple $qemu_sdl' \
  V='$v' \
  $extra_make_args \
  all \
"
echo "$cmd" | tee "${rootdir}/build.log"
eval "$cmd"
cd ..
if "$gem5"; then
  ./build-gem5 -a "$arch"
fi
